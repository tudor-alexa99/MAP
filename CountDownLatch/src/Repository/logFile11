[ExeStack: [Ref(int) v; New (v:20); Ref(Ref(int)) a; New (a:v); Ref(int) V; New (V:30); print(Rh(Rh(a)))      ]
Symbol table: {}
Out list:: []
Heap: [ {}]]

[ExeStack: [New (v:20); Ref(Ref(int)) a; New (a:v); Ref(int) V; New (V:30); print(Rh(Rh(a)))     , Ref(int) v]
Symbol table: {}
Out list:: []
Heap: [ {}]]

[ExeStack: [New (v:20); Ref(Ref(int)) a; New (a:v); Ref(int) V; New (V:30); print(Rh(Rh(a)))     ]
Symbol table: {v=(0: int)}
Out list:: []
Heap: [ {}]]

[ExeStack: [Ref(Ref(int)) a; New (a:v); Ref(int) V; New (V:30); print(Rh(Rh(a)))    , New (v:20)]
Symbol table: {v=(0: int)}
Out list:: []
Heap: [ {}]]

[ExeStack: [Ref(Ref(int)) a; New (a:v); Ref(int) V; New (V:30); print(Rh(Rh(a)))    ]
Symbol table: {v=(1: int)}
Out list:: []
Heap: [ {1=20}]]

[ExeStack: [New (a:v); Ref(int) V; New (V:30); print(Rh(Rh(a)))   , Ref(Ref(int)) a]
Symbol table: {v=(1: int)}
Out list:: []
Heap: [ {1=20}]]

[ExeStack: [New (a:v); Ref(int) V; New (V:30); print(Rh(Rh(a)))   ]
Symbol table: {a=(0: Ref(int)), v=(1: int)}
Out list:: []
Heap: [ {1=20}]]

[ExeStack: [Ref(int) V; New (V:30); print(Rh(Rh(a)))  , New (a:v)]
Symbol table: {a=(0: Ref(int)), v=(1: int)}
Out list:: []
Heap: [ {1=20}]]

[ExeStack: [Ref(int) V; New (V:30); print(Rh(Rh(a)))  ]
Symbol table: {a=(2: Ref(int)), v=(1: int)}
Out list:: []
Heap: [ {1=20, 2=(1: int)}]]

[ExeStack: [New (V:30); print(Rh(Rh(a))) , Ref(int) V]
Symbol table: {a=(2: Ref(int)), v=(1: int)}
Out list:: []
Heap: [ {1=20, 2=(1: int)}]]

[ExeStack: [New (V:30); print(Rh(Rh(a))) ]
Symbol table: {V=(0: int), a=(2: Ref(int)), v=(1: int)}
Out list:: []
Heap: [ {1=20, 2=(1: int)}]]

[ExeStack: [print(Rh(Rh(a))), New (V:30)]
Symbol table: {V=(0: int), a=(2: Ref(int)), v=(1: int)}
Out list:: []
Heap: [ {1=20, 2=(1: int)}]]

[ExeStack: [print(Rh(Rh(a)))]
Symbol table: {V=(3: int), a=(2: Ref(int)), v=(1: int)}
Out list:: []
Heap: [ {1=20, 2=(1: int), 3=30}]]

[ExeStack: []
Symbol table: {V=(3: int), a=(2: Ref(int)), v=(1: int)}
Out list:: [20]
Heap: [ {1=20, 2=(1: int), 3=30}]]

[ExeStack: [Ref(int) v; New (v:20); Ref(Ref(int)) a; New (a:v); New (v:30); Ref(int) V; print(Rh(Rh(a))); V=30       ]
Symbol table: {}
Out list:: []
Heap: [ {}]]

[ExeStack: [New (v:20); Ref(Ref(int)) a; New (a:v); New (v:30); Ref(int) V; print(Rh(Rh(a))); V=30      , Ref(int) v]
Symbol table: {}
Out list:: []
Heap: [ {}]]

[ExeStack: [New (v:20); Ref(Ref(int)) a; New (a:v); New (v:30); Ref(int) V; print(Rh(Rh(a))); V=30      ]
Symbol table: {v=(0: int)}
Out list:: []
Heap: [ {}]]

[ExeStack: [Ref(Ref(int)) a; New (a:v); New (v:30); Ref(int) V; print(Rh(Rh(a))); V=30     , New (v:20)]
Symbol table: {v=(0: int)}
Out list:: []
Heap: [ {}]]

[ExeStack: [Ref(Ref(int)) a; New (a:v); New (v:30); Ref(int) V; print(Rh(Rh(a))); V=30     ]
Symbol table: {v=(1: int)}
Out list:: []
Heap: [ {1=20}]]

[ExeStack: [New (a:v); New (v:30); Ref(int) V; print(Rh(Rh(a))); V=30    , Ref(Ref(int)) a]
Symbol table: {v=(1: int)}
Out list:: []
Heap: [ {1=20}]]

[ExeStack: [New (a:v); New (v:30); Ref(int) V; print(Rh(Rh(a))); V=30    ]
Symbol table: {a=(0: Ref(int)), v=(1: int)}
Out list:: []
Heap: [ {1=20}]]

[ExeStack: [New (v:30); Ref(int) V; print(Rh(Rh(a))); V=30   , New (a:v)]
Symbol table: {a=(0: Ref(int)), v=(1: int)}
Out list:: []
Heap: [ {1=20}]]

[ExeStack: [New (v:30); Ref(int) V; print(Rh(Rh(a))); V=30   ]
Symbol table: {a=(2: Ref(int)), v=(1: int)}
Out list:: []
Heap: [ {1=20, 2=(1: int)}]]

[ExeStack: [Ref(int) V; print(Rh(Rh(a))); V=30  , New (v:30)]
Symbol table: {a=(2: Ref(int)), v=(1: int)}
Out list:: []
Heap: [ {1=20, 2=(1: int)}]]

[ExeStack: [Ref(int) V; print(Rh(Rh(a))); V=30  ]
Symbol table: {a=(2: Ref(int)), v=(3: int)}
Out list:: []
Heap: [ {2=(1: int), 3=30}]]

[ExeStack: [print(Rh(Rh(a))); V=30 , Ref(int) V]
Symbol table: {a=(2: Ref(int)), v=(3: int)}
Out list:: []
Heap: [ {2=(1: int), 3=30}]]

[ExeStack: [print(Rh(Rh(a))); V=30 ]
Symbol table: {V=(0: int), a=(2: Ref(int)), v=(3: int)}
Out list:: []
Heap: [ {2=(1: int), 3=30}]]

[ExeStack: [V=30, print(Rh(Rh(a)))]
Symbol table: {V=(0: int), a=(2: Ref(int)), v=(3: int)}
Out list:: []
Heap: [ {2=(1: int), 3=30}]]

